[["index.html", "R code for causal inference book Preface", " R code for causal inference book Duzhe Wang 2020-12-19 Preface The R code is based on the code by Joy Shi and Sean McGrath given here, and the rendered version by Tom Palmer given here. "],["why-model.html", "11. Why model? Some concepts and points Program 11.1 Program 11.2 Program 11.3", " 11. Why model? Some concepts and points Estimand Estimator We can not always let the data “speak for themselves” to obtain a meaningful estimate. Rather, we often need to supplement the data with a model. What is a model? A model is defined by an a priori restriction on the joint distribution of the data. When using a parametric model, the inferences are correct only if the restrictions encoded in the model are correct, i.e., if the model is correctly specified. Thus model-based causal inference relies on conditions of no model misspecification. Fisher consistency: An estimator of a population quantity that, when calculated using the entire population rather than a sample, yields the true value of the population parameter. Bias-variance trade-off Program 11.1 Sample averages by treatment level Data from Figures 11.1 and 11.2 A&lt;-c(rep(1, 8), rep(0, 8)) Y &lt;- c(200, 150, 220, 110, 50, 180, 90, 170, 170, 30, 70, 110, 80, 50, 10, 20) plot(A, Y, pch=16) mean(Y[A == 0]) ## [1] 67.5 mean(Y[A == 1]) ## [1] 146.25 A2&lt;-c(rep(1,4), rep(2, 4), rep(3, 4), rep(4,4)) Y2 &lt;- c(110, 80, 50, 40, 170, 30, 70, 50, 110, 50, 180, 130, 200, 150, 220, 210) plot(A2, Y2, pch=16) mean(Y2[A2 == 1]) ## [1] 70 mean(Y2[A2 == 2]) ## [1] 80 mean(Y2[A2 == 3]) ## [1] 117.5 mean(Y2[A2 == 4]) ## [1] 195 Program 11.2 2-parameter linear model Data from Figures 11.3 and 11.1 A3 &lt;-c(3, 11, 17, 23, 29, 37, 41, 53, 67, 79, 83, 97, 60, 71, 15, 45) Y3 &lt;-c(21, 54, 33, 101, 85, 65, 157, 120, 111, 200, 140, 220, 230, 217, 11, 190) plot(Y3 ~ A3, pch=16) summary(glm(Y3 ~ A3)) ## ## Call: ## glm(formula = Y3 ~ A3) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -61.930 -30.564 -5.741 30.653 77.225 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 24.5464 21.3300 1.151 0.269094 ## A3 2.1372 0.3997 5.347 0.000103 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for gaussian family taken to be 1944.109) ## ## Null deviance: 82800 on 15 degrees of freedom ## Residual deviance: 27218 on 14 degrees of freedom ## AIC: 170.43 ## ## Number of Fisher Scoring iterations: 2 predict(glm(Y3 ~ A3), data.frame(A3 = 90)) ## 1 ## 216.89 summary(glm(Y ~ A)) ## ## Call: ## glm(formula = Y ~ A) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -96.250 -40.000 3.125 35.938 102.500 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 67.50 19.72 3.424 0.00412 ** ## A 78.75 27.88 2.824 0.01352 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for gaussian family taken to be 3109.821) ## ## Null deviance: 68344 on 15 degrees of freedom ## Residual deviance: 43538 on 14 degrees of freedom ## AIC: 177.95 ## ## Number of Fisher Scoring iterations: 2 Program 11.3 3-parameter linear model: \\(E(Y|A)=\\theta_0+\\theta_{1}A+\\theta_{2}A^2\\), where \\(A^2=A\\times A\\) Data from Figure 11.3 Asq &lt;- A3 * A3 mod3 &lt;- glm(Y3 ~ A3 + Asq) summary(mod3) ## ## Call: ## glm(formula = Y3 ~ A3 + Asq) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -65.27 -34.41 13.21 26.11 64.36 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) -7.40688 31.74777 -0.233 0.8192 ## A3 4.10723 1.53088 2.683 0.0188 * ## Asq -0.02038 0.01532 -1.331 0.2062 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for gaussian family taken to be 1842.697) ## ## Null deviance: 82800 on 15 degrees of freedom ## Residual deviance: 23955 on 13 degrees of freedom ## AIC: 170.39 ## ## Number of Fisher Scoring iterations: 2 predict(mod3, data.frame(cbind(A3 = 90, Asq = 8100))) ## 1 ## 197.1269 "]]
